{"ast":null,"code":"var _jsxFileName = \"/home/humberto/\\xC1rea de Trabalho/projeto/sd-019-c-project-trybetunes/src/pages/Album.jsx\";\nimport React, { Component } from 'react';\nimport Header from '../Components/Header';\nimport MusicCard from '../Components/MusicCard';\nimport getMusic from '../services/musicsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      musics: []\n    };\n    this.toLoad = this.toLoad.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      params\n    } = this.props;\n    const {\n      id\n    } = params;\n    console.log(id);\n    getMusic(id).then(response => this.setState({\n      musics: [...response]\n    })).catch(error => console.log(error));\n  }\n\n  toLoad() {\n    console.log('clicou');\n  }\n\n  render() {\n    const {\n      musics,\n      loading\n    } = this.state;\n    const artistName = musics.map(track => track.artistName);\n    const albumName = musics.map(track => track.collectionName);\n    const musicList = musics.slice(1).map((track, key) => /*#__PURE__*/_jsxDEV(MusicCard, {\n      music: track.trackName,\n      previewUrl: track.previewUrl,\n      musicId: track.trackId\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this));\n    console.log(musics);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"artist-name\",\n        children: ['Artist:  ', artistName[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"album-name\",\n        children: ['Album:  ', albumName[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), musicList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Album;","map":{"version":3,"sources":["/home/humberto/Área de Trabalho/projeto/sd-019-c-project-trybetunes/src/pages/Album.jsx"],"names":["React","Component","Header","MusicCard","getMusic","Album","constructor","props","state","loading","musics","toLoad","bind","componentDidMount","params","id","console","log","then","response","setState","catch","error","render","artistName","map","track","albumName","collectionName","musicList","slice","key","trackName","previewUrl","trackId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC5BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAIA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKP,KAAxB;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAASD,MAAf;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAX,IAAAA,QAAQ,CAACW,EAAD,CAAR,CACGG,IADH,CACSC,QAAD,IAAc,KAAKC,QAAL,CAAc;AAAEV,MAAAA,MAAM,EAAE,CAAC,GAAGS,QAAJ;AAAV,KAAd,CADtB,EAEGE,KAFH,CAEUC,KAAD,IAAWN,OAAO,CAACC,GAAR,CAAYK,KAAZ,CAFpB;AAGD;;AAEDX,EAAAA,MAAM,GAAG;AACPK,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,MAAF;AAAUD,MAAAA;AAAV,QAAsB,KAAKD,KAAjC;AACA,UAAMgB,UAAU,GAAGd,MAAM,CAACe,GAAP,CAAYC,KAAD,IAAWA,KAAK,CAACF,UAA5B,CAAnB;AACA,UAAMG,SAAS,GAAGjB,MAAM,CAACe,GAAP,CAAYC,KAAD,IAAWA,KAAK,CAACE,cAA5B,CAAlB;AACA,UAAMC,SAAS,GAAGnB,MAAM,CAACoB,KAAP,CAAa,CAAb,EAAgBL,GAAhB,CAAoB,CAACC,KAAD,EAAQK,GAAR,kBACpC,QAAC,SAAD;AAEE,MAAA,KAAK,EAAGL,KAAK,CAACM,SAFhB;AAGE,MAAA,UAAU,EAAGN,KAAK,CAACO,UAHrB;AAIE,MAAA,OAAO,EAAGP,KAAK,CAACQ;AAJlB,OACQH,GADR;AAAA;AAAA;AAAA;AAAA,YADgB,CAAlB;AAQAf,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,wBACE;AAAK,qBAAY,YAAjB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,uBAAY,aAAjB;AAAA,mBACG,WADH,EAEIc,UAAU,CAAC,CAAD,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAK,uBAAY,YAAjB;AAAA,mBACG,UADH,EAEGG,SAAS,CAAC,CAAD,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,EAUIE,SAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAnD2B;;AAsD9B,eAAexB,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../Components/Header';\nimport MusicCard from '../Components/MusicCard';\nimport getMusic from '../services/musicsAPI';\n\nclass Album extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      musics: [],\n    };\n    this.toLoad = this.toLoad.bind(this);\n  }\n\n  componentDidMount() {\n    const { params } = this.props;\n    const { id } = params;\n    console.log(id);\n    getMusic(id)\n      .then((response) => this.setState({ musics: [...response] }))\n      .catch((error) => console.log(error));\n  }\n\n  toLoad() {\n    console.log('clicou');\n  };\n\n  render() {\n    const { musics, loading } = this.state;\n    const artistName = musics.map((track) => track.artistName);\n    const albumName = musics.map((track) => track.collectionName);\n    const musicList = musics.slice(1).map((track, key) => (\n      <MusicCard\n        key={ key }\n        music={ track.trackName }\n        previewUrl={ track.previewUrl }\n        musicId={ track.trackId }\n      />\n    ));\n    console.log(musics);\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        <div data-testid=\"artist-name\">\n          {'Artist:  '}\n          { artistName[0]}\n        </div>\n        <div data-testid=\"album-name\">\n          {'Album:  '}\n          {albumName[0]}\n        </div>\n        { musicList }\n      </div>\n    );\n  }\n}\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}