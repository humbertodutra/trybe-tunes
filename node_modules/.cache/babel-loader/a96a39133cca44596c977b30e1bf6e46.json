{"ast":null,"code":"var _jsxFileName = \"/home/humberto/\\xC1rea de Trabalho/projeto/sd-019-c-project-trybetunes/src/pages/Favorites.jsx\";\nimport React, { Component } from 'react';\nimport Header from '../Components/Header';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from '../Components/Loading';\nimport MusicCard from '../Components/MusicCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Favorites extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      favSong: [],\n      loading: false\n    };\n    this.toLoad = this.toLoad.bind(this);\n    this.updateFavTracks = this.updateFavTracks.bind(this);\n  }\n\n  componentDidMount() {\n    getFavoriteSongs().then(response => this.setState({\n      favSong: [...response]\n    })).catch(error => console.log(error));\n  }\n\n  toLoad() {\n    this.setState(state => ({\n      loading: !state.loading\n    }));\n  }\n\n  updateFavTracks() {\n    getFavoriteSongs().then(response => this.setState({\n      favSong: [...response]\n    })).then(() => this.toLoad()).catch(error => console.log('Error, ', error));\n  }\n\n  render() {\n    const {\n      favSong\n    } = this.state;\n    const {\n      loading\n    } = this.state;\n    console.log(favSong);\n    const favList = favSong.map(track => /*#__PURE__*/_jsxDEV(MusicCard, {\n      number: track.trackNumber,\n      musicName: track.trackName,\n      previewUrl: track.previewUrl,\n      trackId: track.trackId,\n      trackObj: track,\n      toLoad: this.toLoad,\n      loading: loading,\n      checked: favSong.some(song => song.trackId === track.trackId),\n      update: this.updateFavTracks\n    }, track.trackId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-favorites\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), favList, console.log(favSong)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Favorites;","map":{"version":3,"sources":["/home/humberto/Área de Trabalho/projeto/sd-019-c-project-trybetunes/src/pages/Favorites.jsx"],"names":["React","Component","Header","getFavoriteSongs","Loading","MusicCard","Favorites","constructor","props","state","favSong","loading","toLoad","bind","updateFavTracks","componentDidMount","then","response","setState","catch","error","console","log","render","favList","map","track","trackNumber","trackName","previewUrl","trackId","some","song"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAChCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAIA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClBZ,IAAAA,gBAAgB,GACba,IADH,CACSC,QAAD,IAAc,KAAKC,QAAL,CAAc;AAAER,MAAAA,OAAO,EAAE,CAAC,GAAGO,QAAJ;AAAX,KAAd,CADtB,EAEGE,KAFH,CAEUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFpB;AAGD;;AAEDR,EAAAA,MAAM,GAAG;AACP,SAAKM,QAAL,CAAeT,KAAD,KAAY;AAAEE,MAAAA,OAAO,EAAE,CAACF,KAAK,CAACE;AAAlB,KAAZ,CAAd;AACD;;AAEDG,EAAAA,eAAe,GAAG;AAChBX,IAAAA,gBAAgB,GACba,IADH,CACSC,QAAD,IAAc,KAAKC,QAAL,CAAc;AAAER,MAAAA,OAAO,EAAE,CAAC,GAAGO,QAAJ;AAAX,KAAd,CADtB,EAEGD,IAFH,CAEQ,MAAM,KAAKJ,MAAL,EAFd,EAGGO,KAHH,CAGUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB,CAHpB;AAID;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAc,KAAKF,KAAzB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACA,UAAMc,OAAO,GAAGd,OAAO,CAACe,GAAR,CAAaC,KAAD,iBAC1B,QAAC,SAAD;AAEE,MAAA,MAAM,EAAGA,KAAK,CAACC,WAFjB;AAGE,MAAA,SAAS,EAAGD,KAAK,CAACE,SAHpB;AAIE,MAAA,UAAU,EAAGF,KAAK,CAACG,UAJrB;AAKE,MAAA,OAAO,EAAGH,KAAK,CAACI,OALlB;AAME,MAAA,QAAQ,EAAGJ,KANb;AAOE,MAAA,MAAM,EAAG,KAAKd,MAPhB;AAQE,MAAA,OAAO,EAAGD,OARZ;AASE,MAAA,OAAO,EAAGD,OAAO,CAACqB,IAAR,CAAcC,IAAD,IAAUA,IAAI,CAACF,OAAL,KAAiBJ,KAAK,CAACI,OAA9C,CATZ;AAUE,MAAA,MAAM,EAAG,KAAKhB;AAVhB,OACQY,KAAK,CAACI,OADd;AAAA;AAAA;AAAA;AAAA,YADc,CAAhB;AAeA,wBAEE;AAAK,qBAAY,gBAAjB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGN,OAFH,EAGGH,OAAO,CAACC,GAAR,CAAYZ,OAAZ,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAQD;;AAvD+B;;AA0DlC,eAAeJ,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../Components/Header';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from '../Components/Loading';\nimport MusicCard from '../Components/MusicCard';\n\nclass Favorites extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      favSong: [],\n      loading: false,\n    };\n    this.toLoad = this.toLoad.bind(this);\n    this.updateFavTracks = this.updateFavTracks.bind(this);\n  }\n\n  componentDidMount() {\n    getFavoriteSongs()\n      .then((response) => this.setState({ favSong: [...response] }))\n      .catch((error) => console.log(error));\n  }\n\n  toLoad() {\n    this.setState((state) => ({ loading: !state.loading }));\n  }\n\n  updateFavTracks() {\n    getFavoriteSongs()\n      .then((response) => this.setState({ favSong: [...response] }))\n      .then(() => this.toLoad())\n      .catch((error) => console.log('Error, ', error));\n  }\n\n  render() {\n    const { favSong } = this.state;\n    const { loading } = this.state;\n    console.log(favSong);\n    const favList = favSong.map((track) => (\n      <MusicCard\n        key={ track.trackId }\n        number={ track.trackNumber }\n        musicName={ track.trackName }\n        previewUrl={ track.previewUrl }\n        trackId={ track.trackId }\n        trackObj={ track }\n        toLoad={ this.toLoad }\n        loading={ loading }\n        checked={ favSong.some((song) => song.trackId === track.trackId) }\n        update={ this.updateFavTracks }\n\n      />\n    ));\n    return (\n\n      <div data-testid=\"page-favorites\">\n        <Header />\n        {favList}\n        {console.log(favSong)}\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n"]},"metadata":{},"sourceType":"module"}