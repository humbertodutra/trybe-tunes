{"ast":null,"code":"var _jsxFileName = \"/home/humberto/\\xC1rea de Trabalho/projeto/sd-019-c-project-trybetunes/src/pages/Album.jsx\";\nimport React, { Component } from 'react';\nimport Header from '../Components/Header';\nimport Loading from '../Components/Loading';\nimport MusicCard from '../Components/MusicCard';\nimport getMusic from '../services/musicsAPI';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Album extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      musics: [],\n      favoriteSongs: []\n    };\n    this.toLoad = this.toLoad.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      params\n    } = this.props;\n    const {\n      id\n    } = params;\n    console.log(id);\n    getMusic(id).then(response => this.setState({\n      musics: [...response]\n    })).catch(error => console.log(error));\n    getFavoriteSongs().then(response => this.setState({\n      favoriteSongs: [...response]\n    }));\n  }\n\n  toLoad() {\n    this.setState(state => ({\n      loading: !state.loading\n    }));\n  }\n\n  render() {\n    const {\n      musics,\n      loading,\n      favoriteSongs\n    } = this.state;\n    const artistName = musics.map(track => track.artistName);\n    const albumName = musics.map(track => track.collectionName);\n    const musicList = musics.slice(1).map((track, key) => /*#__PURE__*/_jsxDEV(MusicCard, {\n      number: track.trackNumber,\n      musicName: track.trackName,\n      previewUrl: track.previewUrl,\n      musicId: track.trackId,\n      trackObj: track,\n      toLoad: this.toLoad,\n      loading: loading,\n      favoriteSongs: favoriteSongs.some(song => song.trackId === track.trackId)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this));\n    console.log(musics);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"artist-name\",\n          children: ['Artist:  ', artistName[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"album-name\",\n          children: ['Album:  ', albumName[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), musicList]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Album;","map":{"version":3,"sources":["/home/humberto/Área de Trabalho/projeto/sd-019-c-project-trybetunes/src/pages/Album.jsx"],"names":["React","Component","Header","Loading","MusicCard","getMusic","getFavoriteSongs","Album","constructor","props","state","loading","musics","favoriteSongs","toLoad","bind","componentDidMount","params","id","console","log","then","response","setState","catch","error","render","artistName","map","track","albumName","collectionName","musicList","slice","key","trackNumber","trackName","previewUrl","trackId","some","song"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../Components/Header';\nimport Loading from '../Components/Loading';\nimport MusicCard from '../Components/MusicCard';\nimport getMusic from '../services/musicsAPI';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nclass Album extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      musics: [],\n      favoriteSongs: [],\n    };\n    this.toLoad = this.toLoad.bind(this);\n  }\n\n  componentDidMount() {\n    const { params } = this.props;\n    const { id } = params;\n    console.log(id);\n    getMusic(id)\n      .then((response) => this.setState({ musics: [...response] }))\n      .catch((error) => console.log(error));\n    getFavoriteSongs()\n      .then((response) => this.setState({ favoriteSongs: [...response] }));\n  }\n\n  toLoad() {\n    this.setState((state) => ({ loading: !state.loading }));\n  }\n\n  render() {\n    const { musics, loading, favoriteSongs } = this.state;\n    const artistName = musics.map((track) => track.artistName);\n    const albumName = musics.map((track) => track.collectionName);\n    const musicList = musics.slice(1).map((track, key) => (\n      <MusicCard\n        key={ key }\n        number={ track.trackNumber }\n        musicName={ track.trackName }\n        previewUrl={ track.previewUrl }\n        musicId={ track.trackId }\n        trackObj={ track }\n        toLoad={ this.toLoad }\n        loading={ loading }\n        favoriteSongs={ favoriteSongs.some((song) => song.trackId === track.trackId) }\n      />\n    ));\n    console.log(musics);\n    return (\n      <div data-testid=\"page-album\">\n        { loading ? <Loading /> : (\n          <>\n            <Header />\n            <div data-testid=\"artist-name\">\n              {'Artist:  '}\n              { artistName[0]}\n            </div>\n            <div data-testid=\"album-name\">\n              {'Album:  '}\n              {albumName[0]}\n            </div>\n            { musicList }\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}