{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Desktop/ProjectsGitPortfolio/trybeTunesProject/src/pages/Login.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUser } from '../services/userAPI';\nimport Loading from '../Components/Loading';\nimport '../styles/login.css';\nimport LogoTunes from '../images/trybeTuneslogo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.redirect = this.redirect.bind(this);\n    this.state = {\n      isAuthenticated: false\n    };\n  }\n\n  redirect() {\n    const {\n      history\n    } = this.props;\n    history.push('/search');\n  }\n\n  render() {\n    const {\n      name,\n      handleInputChange\n    } = this.props;\n    const minName = 3;\n    const {\n      isAuthenticated\n    } = this.state;\n    const {\n      redirect\n    } = this;\n    return !isAuthenticated ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"login-rectangle\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"logo-trybe-tunes\",\n        src: LogoTunes,\n        alt: \"logo-trybetunes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-rectangle\",\n        \"data-testid\": \"page-login\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: event => event.preventDefault(),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: [\"Digite seu nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              \"data-testid\": \"login-name-input\",\n              name: \"name\",\n              className: \"login-input\",\n              value: name,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            \"data-testid\": \"login-submit-button\",\n            type: \"submit\",\n            value: \"Entrar\",\n            disabled: name.length < minName,\n            onClick: async () => {\n              this.setState(state => ({\n                isAuthenticated: !state.isAuthenticated\n              }));\n              const isLogged = await createUser({\n                name\n              });\n              this.setState(state => ({\n                isAuthenticated: !state.isAuthenticated\n              }));\n              return isLogged === 'OK' && redirect();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nLogin.propTypes = {\n  name: PropTypes.string.isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default Login;","map":{"version":3,"sources":["/home/humberto/Desktop/ProjectsGitPortfolio/trybeTunesProject/src/pages/Login.jsx"],"names":["React","PropTypes","createUser","Loading","LogoTunes","Login","Component","constructor","props","redirect","bind","state","isAuthenticated","history","push","render","name","handleInputChange","minName","event","preventDefault","length","setState","isLogged","propTypes","string","isRequired","func","shape"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAO,qBAAP;AACA,OAAOC,SAAP,MAAsB,8BAAtB;;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAAb;AACD;;AAEDH,EAAAA,QAAQ,GAAG;AACT,UAAM;AAAEI,MAAAA;AAAF,QAAc,KAAKL,KAAzB;AACAK,IAAAA,OAAO,CAACC,IAAR,CAAa,SAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAA8B,KAAKT,KAAzC;AACA,UAAMU,OAAO,GAAG,CAAhB;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAsB,KAAKD,KAAjC;AACA,UAAM;AAAEF,MAAAA;AAAF,QAAe,IAArB;AACA,WAAO,CAACG,eAAD,gBAEL;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,GAAG,EAAGR,SAFR;AAGE,QAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,uBAAY,YAA5C;AAAA,+BACE;AAAM,UAAA,QAAQ,EAAIe,KAAD,IAAWA,KAAK,CAACC,cAAN,EAA5B;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA,wDAEE;AACE,6BAAY,kBADd;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,SAAS,EAAC,aAHZ;AAIE,cAAA,KAAK,EAAGJ,IAJV;AAKE,cAAA,QAAQ,EAAGC;AALb;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE;AACE,2BAAY,qBADd;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,KAAK,EAAC,QAHR;AAIE,YAAA,QAAQ,EAAGD,IAAI,CAACK,MAAL,GAAcH,OAJ3B;AAKE,YAAA,OAAO,EAAG,YAAY;AACpB,mBAAKI,QAAL,CAAeX,KAAD,KAAY;AAAEC,gBAAAA,eAAe,EAAE,CAACD,KAAK,CAACC;AAA1B,eAAZ,CAAd;AACA,oBAAMW,QAAQ,GAAG,MAAMrB,UAAU,CAAC;AAAEc,gBAAAA;AAAF,eAAD,CAAjC;AACA,mBAAKM,QAAL,CAAeX,KAAD,KAAY;AAAEC,gBAAAA,eAAe,EAAE,CAACD,KAAK,CAACC;AAA1B,eAAZ,CAAd;AACA,qBAAOW,QAAQ,KAAK,IAAb,IAAqBd,QAAQ,EAApC;AACD;AAVH;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK,gBAqCH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YArCJ;AAsCD;;AAvDiC;;AA0DpCJ,KAAK,CAACmB,SAAN,GAAkB;AAChBR,EAAAA,IAAI,EAAEf,SAAS,CAACwB,MAAV,CAAiBC,UADP;AAEhBT,EAAAA,iBAAiB,EAAEhB,SAAS,CAAC0B,IAAV,CAAeD,UAFlB;AAGhBb,EAAAA,OAAO,EAAEZ,SAAS,CAAC2B,KAAV,CAAgB;AAAEd,IAAAA,IAAI,EAAEb,SAAS,CAAC0B,IAAV,CAAeD;AAAvB,GAAhB,EACNA;AAJa,CAAlB;AAOA,eAAerB,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUser } from '../services/userAPI';\nimport Loading from '../Components/Loading';\nimport '../styles/login.css'\nimport LogoTunes from '../images/trybeTuneslogo.png'\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.redirect = this.redirect.bind(this);\n    this.state = { isAuthenticated: false };\n  }\n\n  redirect() {\n    const { history } = this.props;\n    history.push('/search');\n  }\n\n  render() {\n    const { name, handleInputChange } = this.props;\n    const minName = 3;\n    const { isAuthenticated } = this.state;\n    const { redirect } = this;\n    return !isAuthenticated\n      ? (\n      <section className=\"login-rectangle\">  \n        <img\n          className=\"logo-trybe-tunes\"\n          src={ LogoTunes }\n          alt=\"logo-trybetunes\"\n        />\n        <div className=\"form-rectangle\" data-testid=\"page-login\">\n          <form onSubmit={ (event) => event.preventDefault() }>\n            <label htmlFor=\"name\">\n              Digite seu nome:\n              <input\n                data-testid=\"login-name-input\"\n                name=\"name\"\n                className=\"login-input\"\n                value={ name }\n                onChange={ handleInputChange }\n              />\n            </label>\n            <input\n              data-testid=\"login-submit-button\"\n              type=\"submit\"\n              value=\"Entrar\"\n              disabled={ name.length < minName }\n              onClick={ async () => {\n                this.setState((state) => ({ isAuthenticated: !state.isAuthenticated }));\n                const isLogged = await createUser({ name });\n                this.setState((state) => ({ isAuthenticated: !state.isAuthenticated }));\n                return isLogged === 'OK' && redirect();\n              } }\n            />\n          </form>\n        </div>\n    </section>  \n      )\n      : (\n        <Loading />);\n  }\n}\n\nLogin.propTypes = {\n  name: PropTypes.string.isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n  history: PropTypes.shape({ push: PropTypes.func.isRequired })\n    .isRequired,\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}